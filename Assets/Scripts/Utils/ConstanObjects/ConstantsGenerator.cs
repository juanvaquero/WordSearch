
using System.IO;
using System.Text.RegularExpressions;

public class ConstantsGenerator
{
    public const string DEFAULT_CONST_FILE_PATH = "Assets/Scripts/Constants";

    public static void WriteConListToFile(string className, IConstant[] constants, string constantFilePath = DEFAULT_CONST_FILE_PATH)
    {
        // Add comment to explain de class, and the fact that is autogenerated by this script
        string classDescription = "/// This class is auto-generated by Constants Generator script, if you want add new constants I recommend adding using the corresponding editor class.";
        classDescription += "\n/// Important: Not change the following constant values, these values will be match with the sames values in the scriptable object to work properly.";
        string fileContent = "///<summary>\n" + classDescription + "\n///</summary>\n";

        fileContent += "public static class " + className + "\n{\n";

        for (int i = 0; i < constants.Length; i++)
        {
            // Remove leading and trailing whitespace from the string
            string trimmedString = constants[i].GetConstantValue().Trim();
            // Replace multiple spaces with a single space
            string formattedString = Regex.Replace(trimmedString, @"\s+", " ");
            // Remove characters that violate C# format
            formattedString = Regex.Replace(formattedString, "[^0-9a-zA-Z ]+", "");

            // Check if the string is not empty or only composed of whitespace
            if (!string.IsNullOrWhiteSpace(formattedString))
            {
                string constName = formattedString.ToUpper().Replace(" ", "_");
                fileContent += "    public const string " + constName + " = \"" + formattedString + "\";\n";
            }
        }
        fileContent += "}";

        string auxPath = constantFilePath;
        if (!Directory.Exists(auxPath))
        {
            Directory.CreateDirectory(auxPath);
        }

        auxPath = Path.Combine(auxPath, className) + ".cs";

        if (File.Exists(auxPath))
            File.Delete(auxPath);

        File.WriteAllText(auxPath, fileContent);
    }

}